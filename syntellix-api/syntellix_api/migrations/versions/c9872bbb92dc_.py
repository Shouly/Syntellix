"""empty message

Revision ID: c9872bbb92dc
Revises: c0c7190e3e20
Create Date: 2024-09-12 19:59:23.995878

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'c9872bbb92dc'
down_revision = 'c0c7190e3e20'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('t_sys_knowledge_base',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('avatar', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('permission', sa.Enum('ONLY_ME', 'ALL_TEAM', 'PARTIAL_TEAM', name='knowledgebasepermissionenum'), server_default='only_me', nullable=False),
    sa.Column('data_source_type', sa.Enum('UPLOAD_FILE', 'WECHAT_FILE', 'DINGTALK_FILE', 'FEISHU_FILE', name='knowledgebasedatasourcetype'), server_default='upload_file', nullable=False),
    sa.Column('status', mysql.TINYINT(display_width=1), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_t_sys_knowledge_base'))
    )
    with op.batch_alter_table('t_sys_knowledge_base', schema=None) as batch_op:
        batch_op.create_index('idx_knowledge_base_status', ['status'], unique=False)
        batch_op.create_index('idx_knowledge_base_tenant_id', ['tenant_id'], unique=False)

    op.create_table('t_sys_knowledge_base_permissions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('knowledge_base_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('has_permission', mysql.TINYINT(display_width=1), server_default='0', nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_t_sys_knowledge_base_permissions'))
    )
    with op.batch_alter_table('t_sys_knowledge_base_permissions', schema=None) as batch_op:
        batch_op.create_index('idx_knowledge_base_permissions_account_id', ['account_id'], unique=False)
        batch_op.create_index('idx_knowledge_base_permissions_knowledge_base_id', ['knowledge_base_id'], unique=False)
        batch_op.create_index('idx_knowledge_base_permissions_tenant_id', ['tenant_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('t_sys_knowledge_base_permissions', schema=None) as batch_op:
        batch_op.drop_index('idx_knowledge_base_permissions_tenant_id')
        batch_op.drop_index('idx_knowledge_base_permissions_knowledge_base_id')
        batch_op.drop_index('idx_knowledge_base_permissions_account_id')

    op.drop_table('t_sys_knowledge_base_permissions')
    with op.batch_alter_table('t_sys_knowledge_base', schema=None) as batch_op:
        batch_op.drop_index('idx_knowledge_base_tenant_id')
        batch_op.drop_index('idx_knowledge_base_status')

    op.drop_table('t_sys_knowledge_base')
    # ### end Alembic commands ###
